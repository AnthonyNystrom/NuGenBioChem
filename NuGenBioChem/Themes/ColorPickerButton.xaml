<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:NuGenBioChem.Controls" xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent">
  <Style TargetType="{x:Type Controls:ColorPickerButton}">
    <Setter Property="LargeIcon">
      <Setter.Value>
        <DrawingImage>
          <DrawingImage.Drawing>
            <GeometryDrawing Brush="{Binding SelectedBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:ColorPickerButton}}}">
              <GeometryDrawing.Geometry>
                <GeometryGroup>
                  <RectangleGeometry Rect="0,0,32,32"/>
                </GeometryGroup>
              </GeometryDrawing.Geometry>
              <GeometryDrawing.Pen>
                <Pen Thickness="1" Brush="Silver" />
              </GeometryDrawing.Pen>
            </GeometryDrawing>
          </DrawingImage.Drawing>
        </DrawingImage>
      </Setter.Value>
    </Setter>
    <Setter Property="Icon">
      <Setter.Value>
      <DrawingImage>
        <DrawingImage.Drawing>
          <GeometryDrawing Brush="{Binding SelectedBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:ColorPickerButton}}}">
            <GeometryDrawing.Geometry>
              <GeometryGroup>
                <RectangleGeometry Rect="0,0,16,16"/>
              </GeometryGroup>
            </GeometryDrawing.Geometry>
            <GeometryDrawing.Pen>
              <Pen Thickness="1" Brush="Silver" />
            </GeometryDrawing.Pen>
          </GeometryDrawing>
        </DrawingImage.Drawing>
      </DrawingImage>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:ColorPickerButton}">
          <Fluent:DropDownButton Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                       Icon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                       LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                       Size="{Binding Size, RelativeSource={RelativeSource TemplatedParent}}"
                       SizeDefinition="{Binding SizeDefinition, RelativeSource={RelativeSource TemplatedParent}}"
                       x:Name="button">
            <Fluent:Gallery x:Name="PART_Gallery" ItemsInRow="10" GroupBy="Group" SelectedItem="{Binding SelectedBrushInfo, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" ScrollViewer.VerticalScrollBarVisibility="Hidden">
              <Fluent:Gallery.Resources>
                <Style TargetType="{x:Type Fluent:GalleryItem}">
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type Fluent:GalleryItem}">
                        <Grid>
                          <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                          <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="1" CornerRadius="1" x:Name="innerBorder" BorderBrush="Transparent" Background="Transparent" MaxWidth="13" MaxHeight="13">
                          <Border BorderThickness="1" CornerRadius="1" x:Name="outterBorder" BorderBrush="Transparent" Background="Transparent">                            
                          </Border>
                        </Border>
                          
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="innerBorder" Value="#F29436"/>
                            <Setter Property="BorderBrush" TargetName="outterBorder" Value="#FFE294"/>
                          </Trigger>
                          <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="innerBorder" Value="#F29436"/>
                            <Setter Property="BorderBrush" TargetName="outterBorder" Value="#FFE294"/>
                          </Trigger>
                          <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="innerBorder" Value="#F29436"/>
                            <Setter Property="BorderBrush" TargetName="outterBorder" Value="#FFE294"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Fluent:Gallery.Resources>
              <Fluent:Gallery.ItemTemplate>
                <DataTemplate>
                  <Grid>
                    
                    <Border x:Name="border" Background="{Binding Color}" BorderBrush="#E2E4E7" Width="13" Height="13" Margin="2,0,2,0" BorderThickness="1,0,1,0"/>
                  </Grid>
                  <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding HasTopPadding}" Value="True">
                      <Setter Property="Margin" TargetName="border" Value="2,2,2,0"/>
                      <Setter Property="BorderThickness" TargetName="border" Value="1,1,1,0"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding HasBottomPadding}" Value="True">
                      <Setter Property="Margin" TargetName="border" Value="2,0,2,2"/>
                      <Setter Property="BorderThickness" TargetName="border" Value="1,0,1,1"/>
                    </DataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding HasTopPadding}" Value="True"/>
                        <Condition Binding="{Binding HasBottomPadding}" Value="True"/>
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Margin" TargetName="border" Value="2,1,2,1"/>
                      <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                    </MultiDataTrigger>
                  </DataTemplate.Triggers>
                </DataTemplate>
              </Fluent:Gallery.ItemTemplate>
            </Fluent:Gallery>
            <Fluent:MenuItem Text="No Color" Command="{x:Static Controls:ColorPickerButton.SetNoColorCommand}" x:Name="PART_NoColorMenuItem" Visibility="Collapsed">
              <Fluent:MenuItem.Icon>
              <DrawingImage>
                <DrawingImage.Drawing>
                  <GeometryDrawing Brush="Transparent">
                    <GeometryDrawing.Geometry>
                      <GeometryGroup>
                        <RectangleGeometry Rect="0,0,16,16"/>
                      </GeometryGroup>
                    </GeometryDrawing.Geometry>
                    <GeometryDrawing.Pen>
                      <Pen Thickness="1" Brush="Silver" />
                    </GeometryDrawing.Pen>
                  </GeometryDrawing>
                </DrawingImage.Drawing>
              </DrawingImage>
              </Fluent:MenuItem.Icon>
            </Fluent:MenuItem>
            <Separator x:Name="noColorSeparator" Visibility="Collapsed"/>
            <Fluent:MenuItem Text="More Colors..." Command="{x:Static Controls:ColorPickerButton.MoreColorsCommand}"/>
          </Fluent:DropDownButton>
          <ControlTemplate.Triggers>
            <Trigger Property="ShowNoColor" Value="True">
              <Setter Property="Visibility" Value="Visible" TargetName="PART_NoColorMenuItem"/>
              <Setter Property="Visibility" Value="Visible" TargetName="noColorSeparator"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>